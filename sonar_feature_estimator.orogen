name "sonar_feature_estimator"
# version "0.1"

import_types_from "base"
import_types_from "FeatureEstimationDebugTypes.hpp"
using_library "sonar_detectors"
using_library "dsp_acoustics"

task_context "Task" do

   property("proportional_value_threshold", 'double', 0.5).
        doc("signal filter: every value under that proportional threshold of the mean value of the signal will be filtered out")
   property("signal_threshold", 'double', 1.5).
        doc("signal filter: if the mean value of the signal is below this threshold, the signal will be skiped")

   property("derivative_history_length", 'int', 3).
        doc("feature extraction: num of the derivatives to build the history")
   property("feature_threshold", 'double', 0.6).
        doc("feature extraction: threshold for new features in percent of the mean of the last |best_values_size| best features")
   property("best_values_size", 'int', 100).
        doc("feature extraction: describes how many best-features will be saved to build the threshold")
   property("signal_balancing", 'double', 0.2).
        doc("feature extraction: signal_balancing is a slope that corrects the signal moderation")
   property("plain_length", 'double', 0.1).
        doc("feature extraction: the length of the plain in percent of signal length, if it is 0 the plain will be ignored")
   property("plain_threshold", 'double', 0.9).
        doc("feature extraction: the threshold to be a acceptable plain in percent of the mean signal strength")
   property("enforce_line_rate", 'double', 0.5).
        doc("feature extraction: how much impact the line reweighting should have")
   property("minimum_enforce_line_value", 'double', 1.0).
        doc("feature extraction: minimum impact possible walls should have to each feature")
   property("enforce_line_beam_covariance", 'double', 0.2).
        doc("feature extraction: covariance in meter on each beam in the distance of one meter")
   property("avalon_boundary_box_size", 'double', 1.2).
        doc("radius of the boundary box of avalon")

   property("enable_debug_output", 'bool', false).
        doc("enable debug output on port debug_output")

   input_port("sonar_input", '/base/samples/SonarBeam').
    	needs_reliable_connection
   input_port("orientation_sample", '/base/samples/RigidBodyState')

   output_port('new_feature', '/base/samples/LaserScan').
        doc("newest sonar feature")

   output_port('debug_output', '/sonar_detectors/FeatureEstimation1DDebug').
        doc("sonarbeam debug port")
        
   output_port('2d_debug_output', '/sonar_detectors/FeatureEstimation2DDebug').
        doc("sonarbeam debug port, two dimensional data")

   port_driven "sonar_input"
end


# Declares a deployment, i.e. an actual executable that contains various tasks.
deployment "sonar_feature_estimator_test" do
    do_not_install
    task("sonar_feature_estimator", "Task")
end

